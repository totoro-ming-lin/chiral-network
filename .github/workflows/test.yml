name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Cancel in-progress runs on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12"
          cache: "npm"

      - name: Install Node dependencies
        run: npm ci

      - name: Run frontend linting
        run: npm run check || true

      - name: Build frontend
        run: npm run build

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist/
          retention-days: 1

  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    needs: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist/

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri -> target"
          shared-key: "rust-build"
          cache-on-failure: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1-dev libsoup-3.0-dev \
            libglib2.0-dev pkg-config build-essential libgtk-3-dev curl libssl-dev \
            libayatana-appindicator3-dev librsvg2-dev
      - name: Build backend and run all tests
        run: |
          cd src-tauri
          set +e
          cargo test --release --no-fail-fast | tee output.log
          # Check for "could not compile" lines that do not include "test"
          if grep -i "could not compile" output.log | grep -vi "test" > /dev/null; then
            echo "Build failed: Found 'could not compile' not related to test"
            exit 1
          fi
          exit 0
        continue-on-error: false
        timeout-minutes: 10

  relay:
    name: Relay Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "relay -> target"
          shared-key: "relay-build"
          cache-on-failure: true

      - name: Build and run relay tests
        run: cd relay && cargo test --release --no-fail-fast
        continue-on-error: true
        timeout-minutes: 5
